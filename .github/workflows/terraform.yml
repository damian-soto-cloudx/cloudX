name: 'Deploy Terraform dev/prod'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'environment:'
        required: true
        type: choice
        options:
          - PROD
          - DEV
        default: PROD

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Determine AWS Account based on selected environment
    - name: Set AWS Account Variable
      run: |
        if [[ "${{ inputs.environment }}" == "PROD" ]]; then
          echo "AWS_ACCOUNT=957551240854" >> $GITHUB_ENV
        elif [[ "${{ inputs.environment }}" == "DEV" ]]; then
          echo "AWS_ACCOUNT=957551240855" >> $GITHUB_ENV
        fi
      id: set_aws_account

    # Github role in AWS
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/role_github_actions
        aws-region: us-east-1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false

    # On manual trigger, build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
